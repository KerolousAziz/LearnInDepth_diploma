
;; Function Default_Handler (Default_Handler, funcdef_no=0, decl_uid=4244, cgraph_uid=1, symbol_order=0)

Default_Handler ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  Reset_Handler ();
  return;
;;    succ:       EXIT

}



Partition map 



Coalescible Partition map 


After Coalescing:

Partition map 


Default_Handler ()
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  Reset_Handler ();
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; Reset_Handler ();

(call_insn 5 4 0 (parallel [
            (call (mem:SI (symbol_ref:SI ("Reset_Handler") [flags 0x3]  <function_decl 0682ad00 Reset_Handler>) [0 Reset_Handler S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "startup.c":9:2 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 0 2 (parallel [
            (call (mem:SI (symbol_ref:SI ("Reset_Handler") [flags 0x3]  <function_decl 0682ad00 Reset_Handler>) [0 Reset_Handler S4 A32])
                (const_int 0 [0]))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "startup.c":9:2 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function Reset_Handler (Reset_Handler, funcdef_no=1, decl_uid=4241, cgraph_uid=7, symbol_order=7)

Reset_Handler ()
{
  unsigned int BSS_SIZE;
  int i;
  unsigned char * P_det;
  unsigned char * P_src;
  unsigned int DATA_SIZE;
  int _1;
  unsigned char * P_src.0_2;
  unsigned char * P_det.1_3;
  unsigned char _4;
  unsigned int i.2_5;
  int _6;
  unsigned char * P_det.3_7;
  unsigned int i.4_8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_E_DATA - &_S_DATA;
  DATA_SIZE_16 = (unsigned int) _1;
  P_src_17 = &_E_TEXT;
  P_det_18 = &_S_DATA;
  i_19 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  P_src.0_2 = P_src_9;
  P_src_28 = P_src.0_2 + 1;
  P_det.1_3 = P_det_10;
  P_det_29 = P_det.1_3 + 1;
  _4 = *P_src.0_2;
  *P_det.1_3 = _4;
  i_31 = i_12 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # P_src_9 = PHI <P_src_17(2), P_src_28(3)>
  # P_det_10 = PHI <P_det_18(2), P_det_29(3)>
  # i_12 = PHI <i_19(2), i_31(3)>
  i.2_5 = (unsigned int) i_12;
  if (DATA_SIZE_16 > i.2_5)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _6 = &_E_BSS - &_S_BSS;
  BSS_SIZE_21 = (unsigned int) _6;
  P_det_22 = &_S_BSS;
  i_23 = 0;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 1
;;    pred:       7
  P_det.3_7 = P_det_11;
  P_det_25 = P_det.3_7 + 1;
  *P_det.3_7 = 0;
  i_27 = i_13 + 1;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  # P_det_11 = PHI <P_det_22(5), P_det_25(6)>
  # i_13 = PHI <i_23(5), i_27(6)>
  i.4_8 = (unsigned int) i_13;
  if (BSS_SIZE_21 > i.4_8)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  main ();
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (P_src.0_2 - 2 )
Partition 3 (P_det.1_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (i.2_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (P_det.3_7 - 7 )
Partition 8 (i.4_8 - 8 )
Partition 9 (P_src_9 - 9 )
Partition 10 (P_det_10 - 10 )
Partition 11 (P_det_11 - 11 )
Partition 12 (i_12 - 12 )
Partition 13 (i_13 - 13 )
Partition 16 (DATA_SIZE_16 - 16 )
Partition 17 (P_src_17 - 17 )
Partition 18 (P_det_18 - 18 )
Partition 19 (i_19 - 19 )
Partition 21 (BSS_SIZE_21 - 21 )
Partition 22 (P_det_22 - 22 )
Partition 23 (i_23 - 23 )
Partition 25 (P_det_25 - 25 )
Partition 27 (i_27 - 27 )
Partition 28 (P_src_28 - 28 )
Partition 29 (P_det_29 - 29 )
Partition 31 (i_31 - 31 )


Coalescible Partition map 

Partition 0, base 0 (P_src_9 - 9 17 28 )
Partition 1, base 1 (P_det_10 - 10 11 18 22 25 29 )
Partition 3, base 2 (i_12 - 12 13 19 23 27 31 )


Partition map 

Partition 0 (P_src_9 - 9 )
Partition 1 (P_det_10 - 10 )
Partition 2 (P_det_11 - 11 )
Partition 3 (i_12 - 12 )
Partition 4 (i_13 - 13 )
Partition 5 (P_src_17 - 17 )
Partition 6 (P_det_18 - 18 )
Partition 7 (i_19 - 19 )
Partition 8 (P_det_22 - 22 )
Partition 9 (i_23 - 23 )
Partition 10 (P_det_25 - 25 )
Partition 11 (i_27 - 27 )
Partition 12 (P_src_28 - 28 )
Partition 13 (P_det_29 - 29 )
Partition 14 (i_31 - 31 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) P_src_9 <-> P_src_17
(2147483646, 0) P_src_9 <-> P_src_28
(2147483646, 0) P_det_10 <-> P_det_18
(2147483646, 0) P_det_10 <-> P_det_29
(2147483646, 0) i_12 <-> i_19
(2147483646, 0) i_12 <-> i_31
(2147483646, 0) P_det_10 <-> P_det_11
(2147483646, 0) i_12 <-> i_13
(2147483646, 0) P_det_10 <-> P_det_22
(2147483646, 0) i_12 <-> i_23
(2147483646, 0) P_det_10 <-> P_det_25
(2147483646, 0) i_12 <-> i_27
(10000, 0) P_det_11 <-> P_det_22
(10000, 0) P_det_11 <-> P_det_25
(10000, 0) i_13 <-> i_23
(10000, 0) i_13 <-> i_27

Partition map 

Partition 0 (P_src_9 - 9 )
Partition 1 (P_det_10 - 10 )
Partition 2 (P_det_11 - 11 )
Partition 3 (i_12 - 12 )
Partition 4 (i_13 - 13 )
Partition 5 (P_src_17 - 17 )
Partition 6 (P_det_18 - 18 )
Partition 7 (i_19 - 19 )
Partition 8 (P_det_22 - 22 )
Partition 9 (i_23 - 23 )
Partition 10 (P_det_25 - 25 )
Partition 11 (i_27 - 27 )
Partition 12 (P_src_28 - 28 )
Partition 13 (P_det_29 - 29 )
Partition 14 (i_31 - 31 )

Coalesce list: (9)P_src_9 & (17)P_src_17 [map: 0, 5] : Success -> 0
Coalesce list: (9)P_src_9 & (28)P_src_28 [map: 0, 12] : Success -> 0
Coalesce list: (10)P_det_10 & (18)P_det_18 [map: 1, 6] : Success -> 1
Coalesce list: (10)P_det_10 & (29)P_det_29 [map: 1, 13] : Success -> 1
Coalesce list: (12)i_12 & (19)i_19 [map: 3, 7] : Success -> 3
Coalesce list: (12)i_12 & (31)i_31 [map: 3, 14] : Success -> 3
Coalesce list: (10)P_det_10 & (11)P_det_11 [map: 1, 2] : Success -> 1
Coalesce list: (12)i_12 & (13)i_13 [map: 3, 4] : Success -> 3
Coalesce list: (10)P_det_10 & (22)P_det_22 [map: 1, 8] : Success -> 1
Coalesce list: (12)i_12 & (23)i_23 [map: 3, 9] : Success -> 3
Coalesce list: (10)P_det_10 & (25)P_det_25 [map: 1, 10] : Success -> 1
Coalesce list: (12)i_12 & (27)i_27 [map: 3, 11] : Success -> 3
Coalesce list: (11)P_det_10 & (22)P_det_10: Already Coalesced.
Coalesce list: (11)P_det_10 & (25)P_det_10: Already Coalesced.
Coalesce list: (13)i_12 & (23)i_12: Already Coalesced.
Coalesce list: (13)i_12 & (27)i_12: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (P_src.0_2 - 2 )
Partition 2 (P_det.1_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (i.2_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (P_det.3_7 - 7 )
Partition 7 (i.4_8 - 8 )
Partition 8 (P_src_9 - 9 17 28 )
Partition 9 (P_det_10 - 10 11 18 22 25 29 )
Partition 10 (i_12 - 12 13 19 23 27 31 )
Partition 11 (DATA_SIZE_16 - 16 )
Partition 12 (BSS_SIZE_21 - 21 )

Reset_Handler ()
{
  unsigned int BSS_SIZE;
  int i;
  unsigned char * P_det;
  unsigned char * P_src;
  unsigned int DATA_SIZE;
  int _1;
  unsigned char * P_src.0_2;
  unsigned char * P_det.1_3;
  unsigned char _4;
  unsigned int i.2_5;
  int _6;
  unsigned char * P_det.3_7;
  unsigned int i.4_8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_E_DATA - &_S_DATA;
  DATA_SIZE_16 = (unsigned int) _1;
  P_src_17 = &_E_TEXT;
  P_det_18 = &_S_DATA;
  i_19 = 0;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 3, loop depth 1
;;    pred:       4
  P_src.0_2 = P_src_9;
  P_src_28 = P_src.0_2 + 1;
  P_det.1_3 = P_det_10;
  P_det_29 = P_det.1_3 + 1;
  _4 = *P_src.0_2;
  *P_det.1_3 = _4;
  i_31 = i_12 + 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       2
;;                3
  # P_src_9 = PHI <P_src_17(2), P_src_28(3)>
  # P_det_10 = PHI <P_det_18(2), P_det_29(3)>
  # i_12 = PHI <i_19(2), i_31(3)>
  i.2_5 = (unsigned int) i_12;
  if (DATA_SIZE_16 > i.2_5)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 5, loop depth 0
;;    pred:       4
  _6 = &_E_BSS - &_S_BSS;
  BSS_SIZE_21 = (unsigned int) _6;
  P_det_22 = &_S_BSS;
  i_23 = 0;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 1
;;    pred:       7
  P_det.3_7 = P_det_11;
  P_det_25 = P_det.3_7 + 1;
  *P_det.3_7 = 0;
  i_27 = i_13 + 1;
;;    succ:       7

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  # P_det_11 = PHI <P_det_22(5), P_det_25(6)>
  # i_13 = PHI <i_23(5), i_27(6)>
  i.4_8 = (unsigned int) i_13;
  if (BSS_SIZE_21 > i.4_8)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 8, loop depth 0
;;    pred:       7
  main ();
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = &_E_DATA - &_S_DATA;

(insn 5 4 6 (set (reg:SI 121)
        (symbol_ref:SI ("_E_DATA") [flags 0x40]  <var_decl 06865580 _E_DATA>)) "startup.c":38:52 -1
     (nil))

(insn 6 5 7 (set (reg:SI 122)
        (symbol_ref:SI ("_S_DATA") [flags 0x40]  <var_decl 06865528 _S_DATA>)) "startup.c":38:52 -1
     (nil))

(insn 7 6 0 (set (reg:SI 113 [ _1 ])
        (minus:SI (reg:SI 121)
            (reg:SI 122))) "startup.c":38:52 -1
     (nil))

;; DATA_SIZE_16 = (unsigned int) _1;

(insn 8 7 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 DATA_SIZE+0 S4 A32])
        (reg:SI 113 [ _1 ])) "startup.c":38:15 -1
     (nil))

;; P_src_17 = &_E_TEXT;

(insn 9 8 10 (set (reg/f:SI 123)
        (symbol_ref:SI ("_E_TEXT") [flags 0x40]  <var_decl 068654d0 _E_TEXT>)) "startup.c":39:17 -1
     (nil))

(insn 10 9 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])
        (reg/f:SI 123)) "startup.c":39:17 -1
     (nil))

;; P_det_18 = &_S_DATA;

(insn 11 10 12 (set (reg/f:SI 124)
        (symbol_ref:SI ("_S_DATA") [flags 0x40]  <var_decl 06865528 _S_DATA>)) "startup.c":40:17 -1
     (nil))

(insn 12 11 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg/f:SI 124)) "startup.c":40:17 -1
     (nil))

;; i_19 = 0;

(insn 13 12 14 (set (reg:SI 125)
        (const_int 0 [0])) "startup.c":43:7 -1
     (nil))

(insn 14 13 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 125)) "startup.c":43:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; P_src.0_2 = P_src_9;

(insn 18 17 0 (set (reg/f:SI 114 [ P_src.0_2 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])) "startup.c":46:35 -1
     (nil))

;; P_src_28 = P_src.0_2 + 1;

(insn 19 18 20 (set (reg:SI 126)
        (plus:SI (reg/f:SI 114 [ P_src.0_2 ])
            (const_int 1 [0x1]))) "startup.c":46:35 -1
     (nil))

(insn 20 19 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])
        (reg:SI 126)) "startup.c":46:35 -1
     (nil))

;; P_det.1_3 = P_det_10;

(insn 21 20 0 (set (reg/f:SI 115 [ P_det.1_3 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])) "startup.c":46:9 -1
     (nil))

;; P_det_29 = P_det.1_3 + 1;

(insn 22 21 23 (set (reg:SI 127)
        (plus:SI (reg/f:SI 115 [ P_det.1_3 ])
            (const_int 1 [0x1]))) "startup.c":46:9 -1
     (nil))

(insn 23 22 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg:SI 127)) "startup.c":46:9 -1
     (nil))

;; _4 = *P_src.0_2;

(insn 24 23 0 (set (reg:SI 116 [ _4 ])
        (zero_extend:SI (mem:QI (reg/f:SI 114 [ P_src.0_2 ]) [0 *P_src.0_2+0 S1 A8]))) "startup.c":46:34 -1
     (nil))

;; *P_det.1_3 = _4;

(insn 25 24 26 (set (reg:QI 128)
        (subreg/s/v:QI (reg:SI 116 [ _4 ]) 0)) "startup.c":46:33 -1
     (nil))

(insn 26 25 0 (set (mem:QI (reg/f:SI 115 [ P_det.1_3 ]) [0 *P_det.1_3+0 S1 A8])
        (reg:QI 128)) "startup.c":46:33 -1
     (nil))

;; i_31 = i_12 + 1;

(insn 27 26 28 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":43:23 -1
     (nil))

(insn 28 27 29 (set (reg:SI 129)
        (plus:SI (reg:SI 130)
            (const_int 1 [0x1]))) "startup.c":43:23 -1
     (nil))

(insn 29 28 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 129)) "startup.c":43:23 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 30 29 31 3 (nil) [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; i.2_5 = (unsigned int) i_12;

(insn 32 31 0 (set (reg:SI 117 [ i.2_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":43:11 -1
     (nil))

;; if (DATA_SIZE_16 > i.2_5)

(insn 34 32 35 (set (reg:SI 131)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 DATA_SIZE+0 S4 A32])) "startup.c":43:2 -1
     (nil))

(insn 35 34 36 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131)
            (reg:SI 117 [ i.2_5 ]))) "startup.c":43:2 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "startup.c":43:2 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _6 = &_E_BSS - &_S_BSS;

(insn 38 37 39 (set (reg:SI 132)
        (symbol_ref:SI ("_E_BSS") [flags 0x40]  <var_decl 06865630 _E_BSS>)) "startup.c":51:48 -1
     (nil))

(insn 39 38 40 (set (reg:SI 133)
        (symbol_ref:SI ("_S_BSS") [flags 0x40]  <var_decl 068655d8 _S_BSS>)) "startup.c":51:48 -1
     (nil))

(insn 40 39 0 (set (reg:SI 118 [ _6 ])
        (minus:SI (reg:SI 132)
            (reg:SI 133))) "startup.c":51:48 -1
     (nil))

;; BSS_SIZE_21 = (unsigned int) _6;

(insn 41 40 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 BSS_SIZE+0 S4 A32])
        (reg:SI 118 [ _6 ])) "startup.c":51:15 -1
     (nil))

;; P_det_22 = &_S_BSS;

(insn 42 41 43 (set (reg/f:SI 134)
        (symbol_ref:SI ("_S_BSS") [flags 0x40]  <var_decl 068655d8 _S_BSS>)) "startup.c":52:7 -1
     (nil))

(insn 43 42 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg/f:SI 134)) "startup.c":52:7 -1
     (nil))

;; i_23 = 0;

(insn 44 43 45 (set (reg:SI 135)
        (const_int 0 [0])) "startup.c":53:7 -1
     (nil))

(insn 45 44 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 135)) "startup.c":53:7 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; P_det.3_7 = P_det_11;

(insn 49 48 0 (set (reg/f:SI 119 [ P_det.3_7 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])) "startup.c":56:9 -1
     (nil))

;; P_det_25 = P_det.3_7 + 1;

(insn 50 49 51 (set (reg:SI 136)
        (plus:SI (reg/f:SI 119 [ P_det.3_7 ])
            (const_int 1 [0x1]))) "startup.c":56:9 -1
     (nil))

(insn 51 50 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg:SI 136)) "startup.c":56:9 -1
     (nil))

;; *P_det.3_7 = 0;

(insn 52 51 53 (set (reg:SI 137)
        (const_int 0 [0])) "startup.c":56:33 -1
     (nil))

(insn 53 52 54 (set (reg:QI 138)
        (subreg:QI (reg:SI 137) 0)) "startup.c":56:33 -1
     (nil))

(insn 54 53 0 (set (mem:QI (reg/f:SI 119 [ P_det.3_7 ]) [0 *P_det.3_7+0 S1 A8])
        (reg:QI 138)) "startup.c":56:33 -1
     (nil))

;; i_27 = i_13 + 1;

(insn 55 54 56 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":53:22 -1
     (nil))

(insn 56 55 57 (set (reg:SI 139)
        (plus:SI (reg:SI 140)
            (const_int 1 [0x1]))) "startup.c":53:22 -1
     (nil))

(insn 57 56 0 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 139)) "startup.c":53:22 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 58 57 59 5 (nil) [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; i.4_8 = (unsigned int) i_13;

(insn 60 59 0 (set (reg:SI 120 [ i.4_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":53:11 -1
     (nil))

;; if (BSS_SIZE_21 > i.4_8)

(insn 62 60 63 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 BSS_SIZE+0 S4 A32])) "startup.c":53:2 -1
     (nil))

(insn 63 62 64 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 120 [ i.4_8 ]))) "startup.c":53:2 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "startup.c":53:2 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; main ();

(call_insn 66 65 0 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("main") [flags 0x41]  <function_decl 0682ad80 main>) [0 main S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "startup.c":61:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 121)
        (symbol_ref:SI ("_E_DATA") [flags 0x40]  <var_decl 06865580 _E_DATA>)) "startup.c":38:52 -1
     (nil))
(insn 6 5 7 2 (set (reg:SI 122)
        (symbol_ref:SI ("_S_DATA") [flags 0x40]  <var_decl 06865528 _S_DATA>)) "startup.c":38:52 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 113 [ _1 ])
        (minus:SI (reg:SI 121)
            (reg:SI 122))) "startup.c":38:52 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 DATA_SIZE+0 S4 A32])
        (reg:SI 113 [ _1 ])) "startup.c":38:15 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 123)
        (symbol_ref:SI ("_E_TEXT") [flags 0x40]  <var_decl 068654d0 _E_TEXT>)) "startup.c":39:17 -1
     (nil))
(insn 10 9 11 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])
        (reg/f:SI 123)) "startup.c":39:17 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:SI 124)
        (symbol_ref:SI ("_S_DATA") [flags 0x40]  <var_decl 06865528 _S_DATA>)) "startup.c":40:17 -1
     (nil))
(insn 12 11 13 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg/f:SI 124)) "startup.c":40:17 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 125)
        (const_int 0 [0])) "startup.c":43:7 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 125)) "startup.c":43:7 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (label_ref 30)) "startup.c":43:2 -1
     (nil)
 -> 30)
;;  succ:       5

(barrier 16 15 33)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 33 16 17 4 4 (nil) [1 uses])
(note 17 33 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:SI 114 [ P_src.0_2 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])) "startup.c":46:35 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 126)
        (plus:SI (reg/f:SI 114 [ P_src.0_2 ])
            (const_int 1 [0x1]))) "startup.c":46:35 -1
     (nil))
(insn 20 19 21 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [4 P_src+0 S4 A32])
        (reg:SI 126)) "startup.c":46:35 -1
     (nil))
(insn 21 20 22 4 (set (reg/f:SI 115 [ P_det.1_3 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])) "startup.c":46:9 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 127)
        (plus:SI (reg/f:SI 115 [ P_det.1_3 ])
            (const_int 1 [0x1]))) "startup.c":46:9 -1
     (nil))
(insn 23 22 24 4 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg:SI 127)) "startup.c":46:9 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 116 [ _4 ])
        (zero_extend:SI (mem:QI (reg/f:SI 114 [ P_src.0_2 ]) [0 *P_src.0_2+0 S1 A8]))) "startup.c":46:34 -1
     (nil))
(insn 25 24 26 4 (set (reg:QI 128)
        (subreg/s/v:QI (reg:SI 116 [ _4 ]) 0)) "startup.c":46:33 -1
     (nil))
(insn 26 25 27 4 (set (mem:QI (reg/f:SI 115 [ P_det.1_3 ]) [0 *P_det.1_3+0 S1 A8])
        (reg:QI 128)) "startup.c":46:33 -1
     (nil))
(insn 27 26 28 4 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":43:23 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 129)
        (plus:SI (reg:SI 130)
            (const_int 1 [0x1]))) "startup.c":43:23 -1
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 129)) "startup.c":43:23 -1
     (nil))
;;  succ:       5 (FALLTHRU,DFS_BACK)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU,DFS_BACK)
(code_label 30 29 31 5 3 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 34 5 (set (reg:SI 117 [ i.2_5 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":43:11 -1
     (nil))
(insn 34 32 35 5 (set (reg:SI 131)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 DATA_SIZE+0 S4 A32])) "startup.c":43:2 -1
     (nil))
(insn 35 34 36 5 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 131)
            (reg:SI 117 [ i.2_5 ]))) "startup.c":43:2 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) "startup.c":43:2 -1
     (nil)
 -> 33)
;;  succ:       4
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (reg:SI 132)
        (symbol_ref:SI ("_E_BSS") [flags 0x40]  <var_decl 06865630 _E_BSS>)) "startup.c":51:48 -1
     (nil))
(insn 39 38 40 6 (set (reg:SI 133)
        (symbol_ref:SI ("_S_BSS") [flags 0x40]  <var_decl 068655d8 _S_BSS>)) "startup.c":51:48 -1
     (nil))
(insn 40 39 41 6 (set (reg:SI 118 [ _6 ])
        (minus:SI (reg:SI 132)
            (reg:SI 133))) "startup.c":51:48 -1
     (nil))
(insn 41 40 42 6 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 BSS_SIZE+0 S4 A32])
        (reg:SI 118 [ _6 ])) "startup.c":51:15 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:SI 134)
        (symbol_ref:SI ("_S_BSS") [flags 0x40]  <var_decl 068655d8 _S_BSS>)) "startup.c":52:7 -1
     (nil))
(insn 43 42 44 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg/f:SI 134)) "startup.c":52:7 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 135)
        (const_int 0 [0])) "startup.c":53:7 -1
     (nil))
(insn 45 44 46 6 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 135)) "startup.c":53:7 -1
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (label_ref 58)) "startup.c":53:2 -1
     (nil)
 -> 58)
;;  succ:       8

(barrier 47 46 61)
;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 61 47 48 7 6 (nil) [1 uses])
(note 48 61 49 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 7 (set (reg/f:SI 119 [ P_det.3_7 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])) "startup.c":56:9 -1
     (nil))
(insn 50 49 51 7 (set (reg:SI 136)
        (plus:SI (reg/f:SI 119 [ P_det.3_7 ])
            (const_int 1 [0x1]))) "startup.c":56:9 -1
     (nil))
(insn 51 50 52 7 (set (mem/f/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [4 P_det+0 S4 A32])
        (reg:SI 136)) "startup.c":56:9 -1
     (nil))
(insn 52 51 53 7 (set (reg:SI 137)
        (const_int 0 [0])) "startup.c":56:33 -1
     (nil))
(insn 53 52 54 7 (set (reg:QI 138)
        (subreg:QI (reg:SI 137) 0)) "startup.c":56:33 -1
     (nil))
(insn 54 53 55 7 (set (mem:QI (reg/f:SI 119 [ P_det.3_7 ]) [0 *P_det.3_7+0 S1 A8])
        (reg:QI 138)) "startup.c":56:33 -1
     (nil))
(insn 55 54 56 7 (set (reg:SI 140)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":53:22 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 139)
        (plus:SI (reg:SI 140)
            (const_int 1 [0x1]))) "startup.c":53:22 -1
     (nil))
(insn 57 56 58 7 (set (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (reg:SI 139)) "startup.c":53:22 -1
     (nil))
;;  succ:       8 (FALLTHRU,DFS_BACK)

;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU,DFS_BACK)
(code_label 58 57 59 8 5 (nil) [1 uses])
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 62 8 (set (reg:SI 120 [ i.4_8 ])
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "startup.c":53:11 -1
     (nil))
(insn 62 60 63 8 (set (reg:SI 141)
        (mem/c:SI (plus:SI (reg/f:SI 108 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 BSS_SIZE+0 S4 A32])) "startup.c":53:2 -1
     (nil))
(insn 63 62 64 8 (set (reg:CC 100 cc)
        (compare:CC (reg:SI 141)
            (reg:SI 120 [ i.4_8 ]))) "startup.c":53:2 -1
     (nil))
(jump_insn 64 63 65 8 (set (pc)
        (if_then_else (gtu (reg:CC 100 cc)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "startup.c":53:2 -1
     (nil)
 -> 61)
;;  succ:       7
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 65 64 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(call_insn 66 65 0 9 (parallel [
            (set (reg:SI 0 r0)
                (call (mem:SI (symbol_ref:SI ("main") [flags 0x41]  <function_decl 0682ad80 main>) [0 main S4 A32])
                    (const_int 0 [0])))
            (use (const_int 0 [0]))
            (clobber (reg:SI 14 lr))
        ]) "startup.c":61:5 -1
     (nil)
    (expr_list (clobber (reg:SI 12 ip))
        (nil)))
;;  succ:       EXIT [always]  (FALLTHRU)

